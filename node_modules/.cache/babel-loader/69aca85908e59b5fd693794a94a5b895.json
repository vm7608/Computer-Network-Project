{"ast":null,"code":"// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x7E\n    /* ~ */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3A\n    /* : */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n};","map":{"version":3,"names":["isTerminatorChar","ch","module","exports","text","state","silent","pos","posMax","src","charCodeAt","pending","slice"],"sources":["C:/Users/caoma/Downloads/another/online-shop/node_modules/remarkable/lib/rules_inline/text.js"],"sourcesContent":["// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n"],"mappings":"AAAA;AACA;AAEA,a,CAEA;AACA;;AAEA,SAASA,gBAAT,CAA0BC,EAA1B,EAA8B;EAC5B,QAAQA,EAAR;IACE,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;IACA,KAAK;IAAI;IAAT;MACE,OAAO,IAAP;;IACF;MACE,OAAO,KAAP;EAxBJ;AA0BD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;EAC5C,IAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;;EAEA,OAAOA,GAAG,GAAGF,KAAK,CAACG,MAAZ,IAAsB,CAACR,gBAAgB,CAACK,KAAK,CAACI,GAAN,CAAUC,UAAV,CAAqBH,GAArB,CAAD,CAA9C,EAA2E;IACzEA,GAAG;EACJ;;EAED,IAAIA,GAAG,KAAKF,KAAK,CAACE,GAAlB,EAAuB;IAAE,OAAO,KAAP;EAAe;;EAExC,IAAI,CAACD,MAAL,EAAa;IAAED,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACI,GAAN,CAAUG,KAAV,CAAgBP,KAAK,CAACE,GAAtB,EAA2BA,GAA3B,CAAjB;EAAmD;;EAElEF,KAAK,CAACE,GAAN,GAAYA,GAAZ;EAEA,OAAO,IAAP;AACD,CAdD"},"metadata":{},"sourceType":"script"}