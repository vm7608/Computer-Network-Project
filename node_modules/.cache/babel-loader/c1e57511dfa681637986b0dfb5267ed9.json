{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoma\\\\Downloads\\\\another\\\\online-shop\\\\src\\\\Components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport Auth from \"../../Auth\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { setLoggedInUser } from \"../../Redux/Actions\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConnectedLogin extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userName: \"\",\n      pass: \"\",\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    const {\n      from\n    } = this.props.location.state || {\n      from: {\n        pathname: '/'\n      }\n    };\n    /* If user was authenticated, redirect her to where she came from. */\n\n    if (this.state.redirectToReferrer === true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: from\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 50,\n          fontSize: 26,\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \" Log in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: this.state.userName,\n        placeholder: \"User name\",\n        onChange: e => {\n          this.setState({\n            userName: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: this.state.pass,\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          this.setState({\n            pass: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 10\n        },\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          /* Authenticate the user using entered credentials. */\n          Auth.authenticate(this.state.userName, this.state.pass, user => {\n            /* Authentication failed. */\n            if (!user) {\n              this.setState({\n                wrongCred: true\n              });\n              return;\n            }\n            /* If we get here, authentication was success. */\n\n\n            this.props.dispatch(setLoggedInUser({\n              name: user.name\n            }));\n            this.setState(() => ({\n              redirectToReferrer: true\n            }));\n          });\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), this.state.wrongCred && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Wrong username and/or password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst Login = withRouter(connect()(ConnectedLogin));\nexport default Login;","map":{"version":3,"names":["React","Component","withRouter","Redirect","connect","Auth","TextField","Button","setLoggedInUser","ConnectedLogin","state","userName","pass","redirectToReferrer","render","from","props","location","pathname","marginBottom","fontSize","textAlign","color","e","setState","target","value","marginTop","authenticate","user","wrongCred","dispatch","name","Login"],"sources":["C:/Users/caoma/Downloads/another/online-shop/src/Components/Login/Login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport Auth from \"../../Auth\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { setLoggedInUser } from \"../../Redux/Actions\"\r\n\r\nimport \"./Login.css\"\r\n\r\n\r\nclass ConnectedLogin extends Component {\r\n    state = {\r\n        userName: \"\",\r\n        pass: \"\",\r\n        redirectToReferrer: false\r\n\r\n    }\r\n    render() {\r\n\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n\r\n\r\n        /* If user was authenticated, redirect her to where she came from. */\r\n        if (this.state.redirectToReferrer === true) {\r\n            return <Redirect to={from} />\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div style={{ marginBottom: 50, fontSize: 26, textAlign: \"center\", color: \"gray\" }}> Log in </div>\r\n                <TextField\r\n                    value={this.state.userName}\r\n                    placeholder=\"User name\"\r\n                    onChange={(e) => {\r\n                        this.setState({ userName: e.target.value })\r\n                    }} />\r\n                <TextField\r\n                    value={this.state.pass}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => {\r\n                        this.setState({ pass: e.target.value })\r\n                    }} />\r\n                <Button\r\n                    style={{ marginTop: 10 }}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n\r\n                        /* Authenticate the user using entered credentials. */\r\n                        Auth.authenticate(this.state.userName, this.state.pass, (user) => {\r\n\r\n                            /* Authentication failed. */\r\n                            if (!user) {\r\n                                this.setState({ wrongCred: true })\r\n                                return;\r\n                            }\r\n\r\n                            /* If we get here, authentication was success. */\r\n                            this.props.dispatch(setLoggedInUser({ name: user.name }));\r\n                            this.setState(() => ({\r\n                                redirectToReferrer: true\r\n                            }))\r\n\r\n                        })\r\n                    }}>Log in</Button>\r\n                {this.state.wrongCred && <div style={{ color: \"red\" }}>Wrong username and/or password</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Login = withRouter(connect()(ConnectedLogin));\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}