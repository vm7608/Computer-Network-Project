{"ast":null,"code":"import { sampleProducts } from \"./Data\";\n/* \r\n * Methods of this class are used to simulate calls to server. \r\n */\n\nclass Api {\n  getItemUsingID(id) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let res = sampleProducts.filter(x => x.id === id);\n        resolve(res.length === 0 ? null : res[0]);\n      }, 500);\n    });\n  }\n\n  static _sort(data, sortval) {\n    let items = JSON.parse(JSON.stringify(data));\n\n    if (sortval === \"lh\") {\n      items.sort((a, b) => a.price > b.price ? 1 : b.price > a.price ? -1 : 0);\n    } else if (sortval === \"hl\") {\n      items.sort((a, b) => a.price < b.price ? 1 : b.price < a.price ? -1 : 0);\n    }\n\n    return items;\n  }\n\n  searchData(_ref) {\n    let {\n      category,\n      term,\n      sortValue,\n      popular,\n      usePriceFilter,\n      minPrice,\n      maxPrice\n    } = _ref;\n    return new Promise((resolve, reject) => {\n      if (typeof minPrice !== 'number') minPrice = parseInt(minPrice, 0);\n      if (typeof maxPrice !== 'number') maxPrice = parseInt(maxPrice, 0);\n      setTimeout(() => {\n        let data = sampleProducts.filter(item => {\n          /* Check price filter first */\n          if (usePriceFilter && (item.price < minPrice || item.price > maxPrice)) {\n            return false;\n          }\n          /* If category is not set, we are looking for popular items only. */\n\n\n          if (category === \"popular\") {\n            return item.popular;\n          }\n\n          if (category !== \"All categories\" && category !== item.category) return false;\n          if (term && !item.name.toLowerCase().includes(term.toLowerCase())) return false;\n          return true;\n        });\n\n        if (sortValue) {\n          data = Api._sort(data, sortValue);\n        }\n\n        resolve(data);\n      }, 500);\n    });\n  }\n\n}\n\nexport default new Api();","map":{"version":3,"names":["sampleProducts","Api","getItemUsingID","id","Promise","resolve","reject","setTimeout","res","filter","x","length","_sort","data","sortval","items","JSON","parse","stringify","sort","a","b","price","searchData","category","term","sortValue","popular","usePriceFilter","minPrice","maxPrice","parseInt","item","name","toLowerCase","includes"],"sources":["C:/Users/caoma/Downloads/another/online-shop/src/Api.js"],"sourcesContent":["import { sampleProducts } from \"./Data\"\r\n\r\n\r\n/* \r\n * Methods of this class are used to simulate calls to server. \r\n */\r\nclass Api {\r\n\r\n    getItemUsingID(id) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n                let res = sampleProducts.filter(x => x.id === id);\r\n                resolve(res.length === 0 ? null : res[0]);\r\n\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    static _sort(data, sortval) {\r\n        let items = JSON.parse(JSON.stringify(data));\r\n\r\n        if (sortval === \"lh\") {\r\n            items.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0));\r\n\r\n        } else if (sortval === \"hl\") {\r\n            items.sort((a, b) => (a.price < b.price) ? 1 : ((b.price < a.price) ? -1 : 0));\r\n\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    searchData({ category, term, sortValue, popular, usePriceFilter, minPrice, maxPrice }) {\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if (typeof minPrice !== 'number') minPrice = parseInt(minPrice, 0);\r\n            if (typeof maxPrice !== 'number') maxPrice = parseInt(maxPrice, 0);\r\n\r\n            setTimeout(() => {\r\n\r\n                let data = sampleProducts.filter(item => {\r\n\r\n                    /* Check price filter first */\r\n                    if (usePriceFilter && (item.price < minPrice || item.price > maxPrice)) {\r\n                        return false;\r\n                    }\r\n\r\n                    /* If category is not set, we are looking for popular items only. */\r\n                    if (category === \"popular\") {\r\n                        return item.popular;\r\n                    }\r\n\r\n                    if (category !== \"All categories\" && category !== item.category)\r\n                        return false;\r\n\r\n                    if (term && !item.name.toLowerCase().includes(term.toLowerCase()))\r\n                        return false;\r\n\r\n                    return true;\r\n                });\r\n\r\n                if (sortValue) {\r\n                    data = Api._sort(data, sortValue)\r\n                }\r\n\r\n                resolve(data)\r\n\r\n\r\n            }, 500)\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default new Api()"],"mappings":"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"},"metadata":{},"sourceType":"module"}