{"ast":null,"code":"// Process ++inserted text++\n'use strict';\n\nmodule.exports = function ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B\n  /* + */\n  ) {\n    return false;\n  }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 4 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start + 1) !== 0x2B\n  /* + */\n  ) {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B\n  /* + */\n  ) {\n    return false;\n  }\n\n  if (nextChar === 0x2B\n  /* + */\n  ) {\n    return false;\n  }\n\n  if (nextChar === 0x20 || nextChar === 0x0A) {\n    return false;\n  }\n\n  pos = start + 2;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B\n  /* + */\n  ) {\n    pos++;\n  }\n\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n\n    if (!silent) {\n      state.pending += state.src.slice(start, pos);\n    }\n\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B\n    /* + */\n    ) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B\n      /* + */\n      ) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n        if (nextChar !== 0x2B\n        /* + */\n        && lastChar !== 0x2B\n        /* + */\n        ) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n          //  // standalone ' ++ ' indented with spaces\n          // }\n\n\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({\n      type: 'ins_open',\n      level: state.level++\n    });\n    state.parser.tokenize(state);\n    state.push({\n      type: 'ins_close',\n      level: --state.level\n    });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};","map":{"version":3,"names":["module","exports","ins","state","silent","found","pos","stack","max","posMax","start","lastChar","nextChar","src","charCodeAt","level","options","maxNesting","pending","slice","parser","skipToken","push","type","tokenize"],"sources":["C:/Users/caoma/Downloads/online-shop/node_modules/remarkable/lib/rules_inline/ins.js"],"sourcesContent":["// Process ++inserted text++\n\n'use strict';\n\nmodule.exports = function ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}