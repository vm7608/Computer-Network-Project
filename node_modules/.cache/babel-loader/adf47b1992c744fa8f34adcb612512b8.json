{"ast":null,"code":"'use strict';\n\nvar normalizeLink = require('./normalize_link');\n\nvar unescapeMd = require('../common/utils').unescapeMd;\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\n\nmodule.exports = function parseLinkDestination(state, pos) {\n  var code,\n      level,\n      link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n    pos++;\n\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n\n      if (code === 0x0A\n      /* \\n */\n      ) {\n        return false;\n      }\n\n      if (code === 0x3E\n      /* > */\n      ) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n\n        if (!state.parser.validateLink(link)) {\n          return false;\n        }\n\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n\n      if (code === 0x5C\n      /* \\ */\n      && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    } // no closing '>'\n\n\n    return false;\n  } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control chars\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n      level++;\n\n      if (level > 1) {\n        break;\n      }\n    }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n      level--;\n\n      if (level < 0) {\n        break;\n      }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return false;\n  }\n\n  link = unescapeMd(state.src.slice(start, pos));\n\n  if (!state.parser.validateLink(link)) {\n    return false;\n  }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n};","map":{"version":3,"names":["normalizeLink","require","unescapeMd","module","exports","parseLinkDestination","state","pos","code","level","link","start","max","posMax","src","charCodeAt","slice","parser","validateLink","linkContent"],"sources":["C:/Users/caoma/Downloads/online-shop/node_modules/remarkable/lib/helpers/parse_link_destination.js"],"sourcesContent":["'use strict';\n\n\nvar normalizeLink = require('./normalize_link');\nvar unescapeMd    = require('../common/utils').unescapeMd;\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nmodule.exports = function parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}