{"ast":null,"code":"// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-'; // from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\n\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\nmodule.exports = function abbr2(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      text,\n      nodes,\n      pos,\n      level,\n      reg,\n      m,\n      regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) {\n    return;\n  }\n\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n      return x.substr(1);\n    }).sort(function (a, b) {\n      return b.length - a.length;\n    }).map(regEscape).join('|') + ')' + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') {\n      continue;\n    }\n\n    tokens = blockTokens[j].children; // We scan from the end, to keep position when new tags added.\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n\n      if (token.type !== 'text') {\n        continue;\n      }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while (m = reg.exec(text)) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) {\n        continue;\n      }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      } // replace current node\n\n\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n};","map":{"version":3,"names":["PUNCT_CHARS","regEscape","s","replace","module","exports","abbr2","state","i","j","l","tokens","token","text","nodes","pos","level","reg","m","regText","blockTokens","env","abbreviations","abbrRegExp","split","map","join","Object","keys","x","substr","sort","a","b","length","RegExp","type","children","content","lastIndex","exec","push","slice","index","title","concat"],"sources":["C:/Users/caoma/Downloads/online-shop/node_modules/remarkable/lib/rules_core/abbr2.js"],"sourcesContent":["// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nmodule.exports = function abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}