{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoma\\\\Downloads\\\\online-shop\\\\src\\\\Components\\\\Menu\\\\Menu.js\";\nimport React, { Component } from 'react';\nimport \"./Menu.css\";\nimport { NavLink } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { menuItems } from \"../../Data\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    show: state.showMenu,\n    checkedOutItems: state.checkedOutItems,\n    loggedInUser: state.loggedInUser\n  };\n};\n/*\r\n * This component renders a menu.\r\n *\r\n */\n\n\nclass ConnectedMenu extends Component {\n  constructor(props) {\n    super(props);\n    /* Default expand all title items in menu */\n\n    let defaultExpanded = {};\n    menuItems.forEach(y => {\n      if (y.type === \"title\") defaultExpanded[y.name] = true;\n    });\n    this.state = {\n      expanded: defaultExpanded\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: menuItems.filter(y => {\n        /*\r\n         * For an item to be shown it must either be a title (has no parent),\r\n         * or be in expanded state and plus user must be allowed to see it.\r\n         */\n        return y.parent === undefined || this.state.expanded[y.parent] && (!y.protected || this.props.loggedInUser);\n      }).map((x, i) => {\n        if (x.type === \"item\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: x.url,\n              exact: true,\n              isActive: (_, location) => {\n                /*\r\n                 * In case current URL contains a query string we do some manual\r\n                 * checks to determine if the navlink should be in active style or not.\r\n                 */\n                if (location.search) {\n                  let itemCategory = queryString.parse(x.url.substring(x.url.indexOf(\"?\"))).category;\n                  let currectCategory = queryString.parse(location.search).category;\n                  let isDirect = queryString.parse(location.search).directCategory === \"true\";\n                  return isDirect && itemCategory === currectCategory;\n                }\n\n                return x.url === location.pathname;\n              },\n              style: {\n                textDecoration: 'none',\n                color: \"rgb(32, 32, 34)\"\n              },\n              activeStyle: {\n                fontWeight: 'bold',\n                color: \"#4282ad\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"menuItem\",\n                children: x.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this);\n        } else if (x.type === \"title\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              /* Either expand or collapse this title item */\n              this.setState(ps => {\n                return {\n                  expanded: { ...ps.expanded,\n                    [x.name]: !ps.expanded[x.name]\n                  }\n                };\n              });\n            },\n            style: {\n              height: 30,\n              color: \"gray\",\n              marginLeft: 10,\n              marginTop: 20,\n              fontSize: 14\n            },\n            children: [this.state.expanded[x.name] ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-minus-square\",\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-plus-square\",\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, x.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\nexport default Menu;","map":{"version":3,"names":["React","Component","NavLink","queryString","menuItems","connect","withRouter","mapStateToProps","state","show","showMenu","checkedOutItems","loggedInUser","ConnectedMenu","constructor","props","defaultExpanded","forEach","y","type","name","expanded","render","filter","parent","undefined","protected","map","x","i","margin","url","_","location","search","itemCategory","parse","substring","indexOf","category","currectCategory","isDirect","directCategory","pathname","textDecoration","color","fontWeight","id","setState","ps","height","marginLeft","marginTop","fontSize","marginRight","Menu"],"sources":["C:/Users/caoma/Downloads/online-shop/src/Components/Menu/Menu.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Menu.css\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { menuItems } from \"../../Data\"\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst mapStateToProps = state => {\r\n    return { show: state.showMenu, checkedOutItems: state.checkedOutItems, loggedInUser: state.loggedInUser };\r\n};\r\n\r\n/*\r\n * This component renders a menu.\r\n *\r\n */\r\nclass ConnectedMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /* Default expand all title items in menu */\r\n        let defaultExpanded = {};\r\n        menuItems.forEach(y => {\r\n            if (y.type === \"title\") defaultExpanded[y.name] = true;\r\n        })\r\n\r\n        this.state = {\r\n            expanded: defaultExpanded\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if (!this.props.show) return null;\r\n        return (\r\n            <div className=\"menu\">\r\n                {\r\n\r\n                    menuItems.filter(y => {\r\n                        /*\r\n                         * For an item to be shown it must either be a title (has no parent),\r\n                         * or be in expanded state and plus user must be allowed to see it.\r\n                         */\r\n                        return (y.parent === undefined || (this.state.expanded[y.parent] && (!y.protected || this.props.loggedInUser)));\r\n                    }).map((x, i) => {\r\n\r\n                        if (x.type === \"item\") {\r\n\r\n                            return (<div key={x.id} style={{ margin: 5 }}>\r\n                                <NavLink\r\n                                    to={x.url}\r\n                                    exact\r\n                                    isActive={(_, location) => {\r\n\r\n                                        /*\r\n                                         * In case current URL contains a query string we do some manual\r\n                                         * checks to determine if the navlink should be in active style or not.\r\n                                         */\r\n                                        if (location.search) {\r\n                                            let itemCategory = queryString.parse(x.url.substring(x.url.indexOf(\"?\"))).category;\r\n\r\n                                            let currectCategory = queryString.parse(location.search).category;\r\n                                            let isDirect = queryString.parse(location.search).directCategory===\"true\";\r\n                                            \r\n                                            return isDirect && itemCategory === currectCategory;\r\n                                        }\r\n                                     \r\n                                        return x.url === location.pathname;\r\n                                    }}\r\n                                    style={{\r\n                                        textDecoration: 'none',\r\n                                        color: \"rgb(32, 32, 34)\"\r\n\r\n                                    }}\r\n                                    activeStyle={{\r\n                                        fontWeight: 'bold',\r\n                                        color: \"#4282ad\"\r\n                                    }}\r\n                                >\r\n                                    <div className=\"menuItem\">{x.name}</div>\r\n                                </NavLink></div>);\r\n                        } else if (x.type === \"title\") {\r\n                            return (<div\r\n                                key={x.id}\r\n                                onClick={() => {\r\n\r\n                                    /* Either expand or collapse this title item */\r\n                                    this.setState(ps => {\r\n                                        return {\r\n                                            expanded: {\r\n                                                ...ps.expanded,\r\n                                                [x.name]: !ps.expanded[x.name]\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                }}\r\n                                style={{ height: 30, color: \"gray\", marginLeft: 10, marginTop: 20, fontSize: 14 }}>\r\n                                {this.state.expanded[x.name] ?\r\n                                    <i className=\"far fa-minus-square\" style={{ marginRight: 5 }}></i> :\r\n                                    <i className=\"far fa-plus-square\" style={{ marginRight: 5 }}></i>\r\n                                }\r\n                                <span>{x.name}</span>\r\n\r\n                            </div>);\r\n                        }\r\n\r\n                        return null;\r\n\r\n                    })}\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}