{"ast":null,"code":"'use strict';\n/**\n * Local dependencies\n */\n\nvar Ruler = require('./ruler');\n\nvar StateInline = require('./rules_inline/state_inline');\n\nvar utils = require('./common/utils');\n/**\n * Inline Parser `rules`\n */\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['del', require('./rules_inline/del')], ['ins', require('./rules_inline/ins')], ['mark', require('./rules_inline/mark')], ['emphasis', require('./rules_inline/emphasis')], ['sub', require('./rules_inline/sub')], ['sup', require('./rules_inline/sup')], ['links', require('./rules_inline/links')], ['footnote_inline', require('./rules_inline/footnote_inline')], ['footnote_ref', require('./rules_inline/footnote_ref')], ['autolink', require('./rules_inline/autolink')], ['htmltag', require('./rules_inline/htmltag')], ['entity', require('./rules_inline/entity')]];\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  } // Can be overridden with a custom validator\n\n\n  this.validateLink = validateLink;\n}\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = ['vbscript', 'javascript', 'file', 'data'];\n  var str = url.trim().toLowerCase(); // Care about digital entities \"javascript&#x3A;alert(1)\"\n\n  str = utils.replaceEntities(str);\n\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Expose `ParserInline`\n */\n\n\nmodule.exports = ParserInline;","map":{"version":3,"names":["Ruler","require","StateInline","utils","_rules","ParserInline","ruler","i","length","push","validateLink","prototype","skipToken","state","rules","getRules","len","pos","cached_pos","cacheGet","cacheSet","tokenize","end","posMax","ok","pending","src","pushPending","parse","str","options","env","outTokens","url","BAD_PROTOCOLS","trim","toLowerCase","replaceEntities","indexOf","split","module","exports"],"sources":["C:/Users/caoma/Downloads/another/online-shop/node_modules/remarkable/lib/parser_inline.js"],"sourcesContent":["'use strict';\n\n/**\n * Local dependencies\n */\n\nvar Ruler       = require('./ruler');\nvar StateInline = require('./rules_inline/state_inline');\nvar utils       = require('./common/utils');\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'del',             require('./rules_inline/del') ],\n  [ 'ins',             require('./rules_inline/ins') ],\n  [ 'mark',            require('./rules_inline/mark') ],\n  [ 'emphasis',        require('./rules_inline/emphasis') ],\n  [ 'sub',             require('./rules_inline/sub') ],\n  [ 'sup',             require('./rules_inline/sup') ],\n  [ 'links',           require('./rules_inline/links') ],\n  [ 'footnote_inline', require('./rules_inline/footnote_inline') ],\n  [ 'footnote_ref',    require('./rules_inline/footnote_ref') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'htmltag',         require('./rules_inline/htmltag') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = utils.replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Expose `ParserInline`\n */\n\nmodule.exports = ParserInline;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}