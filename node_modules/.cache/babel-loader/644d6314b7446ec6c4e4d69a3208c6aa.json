{"ast":null,"code":"// Proceess escaped chars and hardbreaks\n'use strict';\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n    return false;\n  }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","map":{"version":3,"names":["ESCAPED","i","push","split","forEach","ch","charCodeAt","module","exports","escape","state","silent","pos","max","posMax","src","pending","type","level"],"sources":["C:/Users/caoma/Downloads/online-shop/node_modules/remarkable/lib/rules_inline/escape.js"],"sourcesContent":["// Proceess escaped chars and hardbreaks\n\n'use strict';\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,OAAO,GAAG,EAAd;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;EAAED,OAAO,CAACE,IAAR,CAAa,CAAb;AAAkB;;AAElD,qCACGC,KADH,CACS,EADT,EACaC,OADb,CACqB,UAASC,EAAT,EAAa;EAAEL,OAAO,CAACK,EAAE,CAACC,UAAH,CAAc,CAAd,CAAD,CAAP,GAA4B,CAA5B;AAAgC,CADpE;;AAIAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;EAC9C,IAAIN,EAAJ;EAAA,IAAQO,GAAG,GAAGF,KAAK,CAACE,GAApB;EAAA,IAAyBC,GAAG,GAAGH,KAAK,CAACI,MAArC;;EAEA,IAAIJ,KAAK,CAACK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,MAA8B;EAAI;EAAtC,EAA+C;IAAE,OAAO,KAAP;EAAe;;EAEhEA,GAAG;;EAEH,IAAIA,GAAG,GAAGC,GAAV,EAAe;IACbR,EAAE,GAAGK,KAAK,CAACK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,CAAL;;IAEA,IAAIP,EAAE,GAAG,GAAL,IAAYL,OAAO,CAACK,EAAD,CAAP,KAAgB,CAAhC,EAAmC;MACjC,IAAI,CAACM,MAAL,EAAa;QAAED,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACK,GAAN,CAAUH,GAAV,CAAjB;MAAkC;;MACjDF,KAAK,CAACE,GAAN,IAAa,CAAb;MACA,OAAO,IAAP;IACD;;IAED,IAAIP,EAAE,KAAK,IAAX,EAAiB;MACf,IAAI,CAACM,MAAL,EAAa;QACXD,KAAK,CAACR,IAAN,CAAW;UACTe,IAAI,EAAE,WADG;UAETC,KAAK,EAAER,KAAK,CAACQ;QAFJ,CAAX;MAID;;MAEDN,GAAG,GARY,CASf;;MACA,OAAOA,GAAG,GAAGC,GAAN,IAAaH,KAAK,CAACK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,MAA8B,IAAlD,EAAwD;QAAEA,GAAG;MAAK;;MAElEF,KAAK,CAACE,GAAN,GAAYA,GAAZ;MACA,OAAO,IAAP;IACD;EACF;;EAED,IAAI,CAACD,MAAL,EAAa;IAAED,KAAK,CAACM,OAAN,IAAiB,IAAjB;EAAwB;;EACvCN,KAAK,CAACE,GAAN;EACA,OAAO,IAAP;AACD,CApCD"},"metadata":{},"sourceType":"script"}