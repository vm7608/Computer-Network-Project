{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoma\\\\Downloads\\\\another\\\\online-shop\\\\src\\\\Components\\\\ProtectedRoute\\\\ProtectedRoute.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n};\n/* Implementation of a protected route component */\n\n\nconst ConnectedProtectedRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return rest.loggedInUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n\n_c = ConnectedProtectedRoute;\nconst ProtectedRoute = connect(mapStateToProps)(ConnectedProtectedRoute);\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectedProtectedRoute\");","map":{"version":3,"names":["Route","Redirect","React","connect","mapStateToProps","state","loggedInUser","ConnectedProtectedRoute","component","Component","rest","props","pathname","from","location","ProtectedRoute"],"sources":["C:/Users/caoma/Downloads/another/online-shop/src/Components/ProtectedRoute/ProtectedRoute.js"],"sourcesContent":["import {  Route, Redirect } from 'react-router-dom'\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {loggedInUser:state.loggedInUser };\r\n};\r\n\r\n/* Implementation of a protected route component */\r\nconst ConnectedProtectedRoute = ({ component: Component, ...rest }) => {\r\n   return  (<Route {...rest} render={(props) => {\r\n      return rest.loggedInUser\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n          pathname: '/login',\r\n          state: { from: props.location }\r\n        }} />\r\n    }} />)\r\n  }\r\n\r\n \r\n  \r\nconst ProtectedRoute = connect(mapStateToProps)(ConnectedProtectedRoute);\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,SAAUA,KAAV,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAC/B,OAAO;IAACC,YAAY,EAACD,KAAK,CAACC;EAApB,CAAP;AACD,CAFD;AAIA;;;AACA,MAAMC,uBAAuB,GAAG,QAAuC;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAsC;EACpE,oBAAS,QAAC,KAAD,OAAWA,IAAX;IAAiB,MAAM,EAAGC,KAAD,IAAW;MAC1C,OAAOD,IAAI,CAACJ,YAAL,gBACH,QAAC,SAAD,OAAeK;MAAf;QAAA;QAAA;QAAA;MAAA,QADG,gBAEH,QAAC,QAAD;QAAU,EAAE,EAAE;UACdC,QAAQ,EAAE,QADI;UAEdP,KAAK,EAAE;YAAEQ,IAAI,EAAEF,KAAK,CAACG;UAAd;QAFO;MAAd;QAAA;QAAA;QAAA;MAAA,QAFJ;IAMD;EAPO;IAAA;IAAA;IAAA;EAAA,QAAT;AAQA,CATH;;KAAMP,uB;AAaN,MAAMQ,cAAc,GAAGZ,OAAO,CAACC,eAAD,CAAP,CAAyBG,uBAAzB,CAAvB;AACA,eAAeQ,cAAf"},"metadata":{},"sourceType":"module"}