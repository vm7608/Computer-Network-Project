{"ast":null,"code":"'use strict';\n/**\n * Local dependencies\n */\n\nvar assign = require('./common/utils').assign;\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar Ruler = require('./ruler');\n/**\n * Preset configs\n */\n\n\nvar config = {\n  'default': require('./configs/default'),\n  'full': require('./configs/full'),\n  'commonmark': require('./configs/commonmark')\n};\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  this.inline = new ParserInline();\n  this.block = new ParserBlock();\n  this.core = new ParserCore();\n  this.renderer = new Renderer();\n  this.ruler = new Ruler();\n  this.options = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) {\n    throw new Error('Wrong `remarkable` preset, check name/content');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n/**\n * Expose `Remarkable`\n */\n\n\nmodule.exports = Remarkable;\n/**\n * Expose `utils`, Useful helper functions for custom\n * rendering.\n */\n\nmodule.exports.utils = require('./common/utils');","map":{"version":3,"names":["assign","require","Renderer","ParserCore","ParserBlock","ParserInline","Ruler","config","StateCore","instance","str","env","src","options","tokens","inlineMode","inline","block","renderer","typographer","Remarkable","preset","core","ruler","configure","set","prototype","presets","self","Error","components","Object","keys","forEach","name","rules","enable","use","plugin","parse","state","process","render","parseInline","renderInline","module","exports","utils"],"sources":["C:/Users/caoma/Downloads/another/online-shop/node_modules/remarkable/lib/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Local dependencies\n */\n\nvar assign       = require('./common/utils').assign;\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar Ruler        = require('./ruler');\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default':    require('./configs/default'),\n  'full':       require('./configs/full'),\n  'commonmark': require('./configs/commonmark')\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new ParserCore();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\n/**\n * Expose `Remarkable`\n */\n\nmodule.exports = Remarkable;\n\n/**\n * Expose `utils`, Useful helper functions for custom\n * rendering.\n */\n\nmodule.exports.utils = require('./common/utils');\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}